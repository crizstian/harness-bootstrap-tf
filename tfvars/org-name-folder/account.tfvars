harness_platform_account_id = "<ACCOUNT ID>"
organization_prefix         = "<DEVSECOPS ORGANIZATION NAME>"
#delegate_prefix = "<K8S CLUSTER NAME>"

harness_platform_organizations = {
  "<DEVSECOPS ORGANIZATION NAME>" = {
    enable      = true
    description = "Organization generated by terraform harness provider"
  }
}

harness_platform_delegates = {
  k8s = {
    "<K8S CLUSTER NAME>" = {
      enable = true
    }
    "example" = {
      enable = false
    }
  }
}

harness_platform_github_connectors = {
  devsecops_connector = {
    enable          = true
    description     = "Connector generated by terraform harness provider"
    connection_type = "Repo"
    url             = "" #"https://github.com/crizstian/harness-bootstrap-tf"
    credentials = {
      http = {
        username     = "" #"crizstian"
        token_ref_id = "" #"account.crizstian_github_token"
      }
    }
    api_authentication = {
      token_ref_id = "" #"account.crizstian_github_token"
    }
  }
}

harness_platform_pipelines = {
  tf_account_setup = {
    enable      = true
    description = "Pipeline generated by terraform harness provider"
    custom_template = {
      pipeline = {
        file          = "templates/pipelines/tf_account_setup.tpl"
        craft_request = false
        vars = {
          approver_ref = "" #"account.SE_Admin"
          delegate_ref = "<K8S CLUSTER NAME>"
        }
      }
      inputset = {
        apply = {
          file          = "templates/inputsets/tf_account_setup_inputset_apply.tpl"
          enable        = true
          craft_request = false
          description   = "Inputset generated by terraform harness provider"
          vars = {
            tf_provision_identifier = "tf_devsecops"
            tf_folder               = "harness-provision"
            tf_backend_bucket       = "" #"crizstian-terraform"
            tf_backend_prefix       = "" #"harness-cristian-tf"
            tf_bucket               = "" #"tf_devsecops"
            tf_key                  = "" #"harness-cristian-tf"
            tf_region               = "" #"us-east-1"
            tf_backend_type         = "" #gcp || aws"
            tf_workspace            = "<+trigger.sourceBranch>"
            tf_remote_vars          = "tfvars/<+trigger.sourceBranch>/account.tfvars"
          }
        }
      }
    }
  }
  delegate_init = {
    enable      = true
    description = "Pipeline generated by terraform harness provider"
    custom_template = {
      pipeline = {
        file          = "templates/pipelines/delegate_init.tpl"
        craft_request = false
        vars          = {}
      }
    }
  }
}
