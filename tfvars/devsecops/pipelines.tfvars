harness_platform_pipelines = {
  harness_seed_setup = {
    components = {
      pipeline = {
        enable      = true
        description = "Pipeline generated by terraform harness provider"
        file        = "templates/devsecops/pipelines/tf_account_setup.tpl"
        tags        = ["required: organization_bootstrap"]
        stages = {
          terraform_sto_stage = {
            template_stage = true
            version        = "beta"
          }
        }
        vars = {
          approver_ref  = "account.SE_Admin"
          git_connector = "devsecops"
        }
      }
      inputset = {
        sto = {
          enable      = true
          file        = "templates/devsecops/inputsets/seed_tf_sto_inputset.tpl"
          description = "Inputset generated by terraform harness provider"
          tags        = ["required: organization_bootstrap"]
          vars = {
            tf_folder         = "harness-provision"
            tf_backend_bucket = "crizstian-terraform"
            tf_workspace      = "<+trigger.sourceBranch>"
            docker_connector  = "devsecops"
            harness_api_key   = "<+secrets.getValue(\"account.cristian_harness_platform_api_key\")>"
          }
        }
        apply = {
          enable      = true
          file        = "templates/devsecops/inputsets/provisioning_seed_inputset_apply.tpl"
          description = "Inputset generated by terraform harness provider"
          tags        = ["required: organization_bootstrap"]
          vars = {
            tf_folder         = "harness-provision"
            tf_backend_bucket = "crizstian-terraform"
            tf_workspace      = "<+trigger.sourceBranch>"
          }
        }
      }
      trigger = {
        github = {
          enable      = true
          tags        = ["required: organization_bootstrap"]
          file        = "templates/devsecops/triggers/devsecops.tpl"
          description = "Trgger generated by terraform harness provider"
          inputset_ref = {
            "apply" = true
            "sto"   = true
          }
          vars = {}
        }
      }
    }
  }

  delegate_init = {
    components = {
      pipeline = {
        enable           = true
        foreign_pipeline = true
      }
      inputset = {
        devsecops = {
          file        = "templates/devsecops/inputsets/delegate_init.tpl"
          enable      = true
          description = "Inputset generated by terraform harness provider"
          vars = {
            enable_terraform = "true"
            enable_gcloud    = "false"
            os_linux_distro  = "centos"
          }
        }
      }
      trigger = {
        devsecops = {
          file          = "templates/shared_services/triggers/delegate_init_cron.tpl"
          enable        = true
          craft_request = false
          description   = "Trgger generated by terraform harness provider"
          inputset_ref = {
            "devsecops" = true
          }
          vars = {}
        }
      }
    }
  }
}
